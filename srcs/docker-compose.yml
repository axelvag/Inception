# # derniere version de docker-compose
# version: '3'

# services:
#   mariadb:
#     image: mariadb:latest # l'image à utiliser
#     container_name: mariadb # Le nom du container, oui vraiment.
#     networks:
#     - inception # à quel network il appartient
#     # build: 
#     #   context: ./requirements/mariadb # ou se trouve son Dockerfile
#     #   dockerfile: Dockerfile  # le nom du Dockerfile ?!
#     env_file: .env  # le fichier d'environnement pour transmettre les variables
#     volumes:  # Voir plus bas
#     - /Users/avaganay/data/mariadb:/var/lib/mysql  # - mariadb:/var/lib/mysql
#     restart: unless-stopped # redémarre tant qu'il n'est pas stoppé 
#     ports: # le port à exposer
#     - "3306"

#   nginx:
#     container_name: nginx
#     volumes:
#     - wordpress:/var/www/html
#     networks:
#     - inception
#     depends_on: # Nouvelle ligne, indiquant de ne pas démarrer NGINX tant que WordPress n'a pas démarré.
#     - wordpress
#     build: 
#       context: ./requirements/nginx
#       dockerfile: Dockerfile
#     env_file: .env
#     ports:
#     - "443:443" # on indique le port qui sera exposé a la machine locale
#     restart: on-failure # Ici nous changeons, le container redémarrera uniquement en cas de crash.

#   wordpress:
#     # image: wordpress:latest # l'image à utiliser
#     container_name: wordpress
#     volumes:
#     - /Users/avaganay/data/wordpress:/var/www/html
#     networks:
#     - inception
#     build: 
#       context: ./requirements/wordpress
#       dockerfile: Dockerfile
#     env_file: .env
#     depends_on: # WordPress démarrera uniquement après MariaDB (sinon il ne pourra pas configurer la base de données...)
#     - mariadb
#     restart: on-failure
#     ports: 
#     - "9000"

# networks:
#   inception:
#     driver: bridge  # le type de commucation entre les 3 containers

# volumes:
#   wordpress:
#     driver: local # ici nous stockons le volume en local
#     driver_opts:
#       type: 'none'  # aucun type spécifique
#       o: 'bind'
#       device: '/Users/avaganay/data/wordpress'  #Ou stocker le dossier sur votre ordinateur en local
#   mariadb:
#     driver: local
#     driver_opts:
#       type: 'none' 
#       o: 'bind' # Les Bind Mounts sont des volumes qui se montent sur un chemin d'accès à l'hôte, et ils peuvent être modifiés par d'autres processus en dehors de docker.
#       device: '/Users/avaganay/data/mariadb'  #Ou stocker le dossier sur votre ordinateur en local

version: '3'

networks:
    inception:
        name: inception
        driver: bridge
  
volumes:

  mariadb_data:
    driver: local
    driver_opts:
      device: /home/avaganay/data/mariadb
      type: 'none'
      o: 'bind'


  wordpress_data:
    driver: local
    driver_opts:
      device: /home/avaganay/data/wordpress
      type: 'none'
      o: 'bind'

services:

    mariadb:
      build: requirements/mariadb
      env_file: 
        - .env 
      restart: always
      container_name: mariadb
      image: mariadb:42
      volumes:
        - mariadb_data:/var/lib/mysql
      ports:
        - "3306"
      networks:
        - inception

    wordpress:
      build: requirements/wordpress
      env_file: 
        - .env 
      container_name: wordpress
      restart: always
      image: wordpress:42
      depends_on:
        - mariadb
      volumes:
        - wordpress_data:/var/www/html
      ports:
        - "9000"
      networks:
        - inception

    nginx:
      build: requirements/nginx
      env_file: 
        - .env 
      restart: always
      container_name: nginx
      image: nginx:42
      depends_on:
        - wordpress
      ports:
        - "443:443"
      volumes:
        - wordpress_data:/var/www/html
      networks:
        - inception

