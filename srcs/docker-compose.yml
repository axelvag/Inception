# derniere version de docker-compose
version: '3'

services:
  mariadb:
    image: mariadb:latest # l'image à utiliser
    container_name: mariadb # Le nom du container, oui vraiment.
    networks:
    - inception # à quel network il appartient
    # build: 
    #   context: ./requirements/mariadb # ou se trouve son Dockerfile
    #   dockerfile: Dockerfile  # le nom du Dockerfile ?!
    env_file: .env  # le fichier d'environnement pour transmettre les variables
    volumes:  # Voir plus bas
    - /Users/avaganay/data/mariadb:/var/lib/mysql:rw  # - mariadb:/var/lib/mysql
    restart: unless-stopped # redémarre tant qu'il n'est pas stoppé 
    ports: # le port à exposer
    - "3306"

  nginx:
    container_name: nginx
    volumes:
    - wordpress:/var/www/html
    networks:
    - inception
    depends_on: # Nouvelle ligne, indiquant de ne pas démarrer NGINX tant que WordPress n'a pas démarré.
    - wordpress
    build: 
      context: ./requirements/nginx
      dockerfile: Dockerfile
    env_file: .env
    ports:
    - "443:443" # on indique le port qui sera exposé a la machine locale
    restart: on-failure # Ici nous changeons, le container redémarrera uniquement en cas de crash.

  wordpress:
    container_name: wordpress
    volumes:
    - /Users/avaganay/data/wordpress:/var/www/html
    networks:
    - inception
    build: 
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    env_file: .env
    depends_on: # WordPress démarrera uniquement après MariaDB (sinon il ne pourra pas configurer la base de données...)
    - mariadb
    restart: on-failure
    ports: 
    - "9000"

networks:
  inception:
    driver: bridge  # le type de commucation entre les 3 containers

volumes:
  wordpress:
    driver: local # ici nous stockons le volume en local
    driver_opts:
      type: 'none'  # aucun type spécifique
      o: 'bind'
      device: '/Users/avaganay/data/wordpress'  #Ou stocker le dossier sur votre ordinateur en local
  mariadb:
    driver: local
    driver_opts:
      type: 'none' 
      o: 'bind' # Les Bind Mounts sont des volumes qui se montent sur un chemin d'accès à l'hôte, et ils peuvent être modifiés par d'autres processus en dehors de docker.
      device: '/Users/avaganay/data/mariadb'  #Ou stocker le dossier sur votre ordinateur en local

# version: '3'

# services:
#   wordpress:
#     image: wordpress:latest
#     container_name: wordpress
#     depends_on:
#       - db
#     volumes:
#       - wordpress_data:/var/www/html
#     environment:
#       WORDPRESS_DB_HOST: db
#       WORDPRESS_DB_USER: wordpress
#       WORDPRESS_DB_PASSWORD: wordpress
#       WORDPRESS_DB_NAME: wordpress
#     ports:
#       - "8000:80"

#   nginx:
#     image: nginx:latest
#     container_name: nginx
#     ports:
#       - "80:80"
#     volumes:
#       - wordpress_data:/var/www/html
#       - ./nginx.conf:/etc/nginx/conf.d/nginx.conf
#     depends_on:
#       - wordpress

#   db:
#     image: mariadb:latest
#     container_name: mariadb
#     volumes:
#       - db_data:/var/lib/mysql
#     environment:
#       MYSQL_ROOT_PASSWORD: rootpassword
#       MYSQL_DATABASE: wordpress
#       MYSQL_USER: wordpress
#       MYSQL_PASSWORD: wordpress

# volumes:
#   wordpress_data:
#   db_data: